---
const { message = 'Welcome, world!' } = Astro.props;
---


<!-- Store the message prop as a data attribute. -->
<edit-func data-message={message.name}>
  <!-- <button class="badge text-bg-warning col-5">Edit</button> -->
  <!-- <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"> -->
    <button type="button" class="badge text-bg-warning col-5" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Edit
  </button>

  <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">{message.id}</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!--begin::Form-->
          <form class="needs-validation" novalidate>
            <!--begin::Body-->
            <div class="card-body">
              <!--begin::Row-->
              <div class="row g-3">
                <!--begin::Col-->
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span
                      class="input-group-text"
                      id="inputGroupPrepend"><b>Name</b></span
                    >
                    <input
                      type="text"
                      class="form-control"
                      id="validationName"
                      value={message.name}
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid Name.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span
                      class="input-group-text"
                      id="inputGroupPrepend"><b>Email</b></span
                    >
                    <input
                      type="text"
                      class="form-control"
                      id="validationEmail"
                      value={message.email}
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid Email.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-6">                  
                  <div class="input-group has-validation">
                    <span
                      class="input-group-text"
                      id="inputGroupPrepend"><b>Contact</b></span
                    >
                    <input
                      type="text"
                      class="form-control"
                      id="validationCustomContact"
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid contact number.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                  <fieldset class="row mb-1">
                    <legend class="col-form-label col-sm-2 pt-0"
                      >Account Status</legend
                    >
                    <div class="col-sm-10">
                      <div class="form-check">
                        <input
                          class="form-check-input"
                          type="radio"
                          name="gridRadios"
                          id="gridRadios1"
                          value="option1"
                          checked
                        />
                        <label class="form-check-label" for="gridRadios1">
                          Active
                        </label>
                      </div>
                      <div class="form-check">
                        <input
                          class="form-check-input"
                          type="radio"
                          name="gridRadios"
                          id="gridRadios2"
                          value="option2"
                        />
                        <label class="form-check-label" for="gridRadios2">
                          Inactive
                        </label>                                            
                      </div>
                    </div>
                  </fieldset>
                </div>
                <!--end::Col-->
              </div>
              <!--end::Row-->
            </div>
            <!--end::Body-->           
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Save</button>              
            </div>
          </form>
          <!--end::Form-->
          <!--begin::JavaScript-->
          <script is:inline>
            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (() => {
              "use strict";

              // Fetch all the forms we want to apply custom Bootstrap validation styles to
              const forms =
                document.querySelectorAll(".needs-validation");

              // Loop over them and prevent submission
              Array.from(forms).forEach((form) => {
                form.addEventListener(
                  "submit",
                  (event) => {
                    if (!form.checkValidity()) {
                      event.preventDefault();
                      event.stopPropagation();
                    }

                    form.classList.add("was-validated");
                  },
                  false
                );
              });
            })();
          </script>
          <!--end::JavaScript-->
        </div>
      </div>
    </div>
  </div>

  
</edit-func>

<delete-func data-message={message}>
  <button class="badge text-bg-danger col-5">Delete</button>
</delete-func>



<script>
  class Editfunction extends HTMLElement {
    connectedCallback() {
      // Read the message from the data attribute.
      const message = "editing: " + this.dataset.message;
      const button = this.querySelector('button');
      button.addEventListener('click', () => {
        const exampleModal = document.getElementById('exampleModal')
        const modalTitle = exampleModal.querySelector('.modal-title')
        const nameField = document.getElementById('exampleModal')
        modalTitle.textContent = `New message to ${message}`
        // modalBodyInput.textContent = "test"
      });
    }
  }

  class Deletefunction extends HTMLElement {
    connectedCallback() {
      // Read the message from the data attribute.
      const message = "deleting: " + this.dataset.message;
      const button = this.querySelector('button');
      button.addEventListener('click', () => {
        confirm(message);
      });
    }
  }

  customElements.define('edit-func', Editfunction);
  customElements.define('delete-func', Deletefunction);
</script>