---
const { message = "" } = Astro.props;
---

<edit-func data-message={message}>
  <button
    type="button"
    data-id={JSON.parse(message).id}
    class="btn btn-primary col-5 me-2"
    data-bs-toggle="modal"
    data-bs-target="#editModal">Edit</button
  >

  <!--begin::Edit Modal-->
  <div
    class="modal fade"
    id="editModal"
    tabindex="-1"
    aria-labelledby="editModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="editModalLabel">Edit Organizer</h1>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!--begin::Form-->
          <h5>{JSON.parse(message).id}</h5>
          <form class="needs-validation" novalidate id={JSON.parse(message).id}>
            <!--begin::Body-->
            <div class="card-body">
              <!--begin::Row-->
              <div class="row g-3">
                <!--begin::Col-->
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"
                      ><b>Name</b></span
                    >
                    <input
                      type="text"
                      class="form-control msg-name"
                      name="username"
                      id="validationName"
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid Name.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"
                      ><b>Email</b></span
                    >
                    <input
                      type="text"
                      class="form-control msg-email"
                      id="validationEmail"
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid Email.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"
                      ><b>Contact</b></span
                    >
                    <input
                      type="text"
                      class="form-control msg-contact"
                      id="validationCustomContact"
                      aria-describedby="inputGroupPrepend"
                      required
                    />
                    <div class="invalid-feedback">
                      Please input a valid contact number.
                    </div>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"
                      ><b>Join Date</b></span
                    >
                    <input id="startDate" class="form-control" type="date" />
                    <div class="invalid-feedback">
                      Please input a valid date.
                    </div>
                  </div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                  <fieldset class="row mb-1">
                    <legend class="col-form-label col-sm-2 pt-0"
                      >Account Status</legend
                    >
                    <div class="col-sm-10">
                      <div class="form-check">
                        <input
                          class="form-check-input"
                          type="radio"
                          name="gridRadios"
                          id="gridRadios1"
                          value="option1"
                          checked
                        />
                        <label class="form-check-label" for="gridRadios1">
                          Active
                        </label>
                      </div>
                      <div class="form-check">
                        <input
                          class="form-check-input"
                          type="radio"
                          name="gridRadios"
                          id="gridRadios2"
                          value="option2"
                        />
                        <label class="form-check-label" for="gridRadios2">
                          Inactive
                        </label>
                      </div>
                    </div>
                  </fieldset>
                </div>
                <!--end::Col-->
              </div>
              <!--end::Row-->
            </div>
            <!--end::Body-->
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal">Close</button
              >
              <button type="submit" class="btn btn-primary">Save</button>
            </div>
          </form>
          <!--end::Form-->
          <!--begin::JavaScript-->
          <script is:inline>
            (() => {
              "use strict";

              const form = document.getElementById(this.id);
              const alertBox = document.getElementById("alert");

              form.addEventListener("submit", async (event) => {
                event.preventDefault(); // Prevent the default form submission

                const formData = {
                  name: document.getElementById("validationName").value,
                  email: document.getElementById("validationEmail").value,
                };

                if (!form.checkValidity()) {
                  event.stopPropagation();
                } else {
                  try {
                    const data = await fetchFromApi(
                      apiUrlHelper.UsersAPI,
                      "POST",
                      formData
                    );
                    console.log(data); // Log the response data

                    // Show the alert
                    alertBox.classList.remove("d-none");
                    form.reset(); // Optionally reset the form

                    // Optionally hide the alert after a few seconds
                    setTimeout(() => {
                      alertBox.classList.add("d-none");
                    }, 3000);
                  } catch (error) {
                    console.error("Error submitting form:", error);
                  }
                }

                form.classList.add("was-validated");
              });
            })();
          </script>
          <!--end::JavaScript-->
        </div>
      </div>
    </div>
  </div>
  <!--end::Edit Modal-->
</edit-func>

<script>
  class Editfunction extends HTMLElement {
    connectedCallback() {
      // Read the message from the data attribute.
      const message = JSON.parse(this.dataset.message);
      const button = this.querySelector("button");
      button.addEventListener("click", () => {
        const editModal = document.getElementById("editModal");
        const modalTitle = editModal.querySelector(".modal-title");
        const msgName = editModal.querySelector(".msg-name");
        const msgEmail = editModal.querySelector(".msg-email");
        const msgContact = editModal.querySelector(".msg-contact");

        modalTitle.textContent = `Editing row number: ${message.id}`;
        msgName.value = `${message.name}`;
        msgEmail.value = `${message.email}`;
        msgContact.value = `${message.contactNumber}`;

        const radioActive = editModal.querySelector("#gridRadios1");
        const radioInactive = editModal.querySelector("#gridRadios2");
        if (message.status === "Active") {
          radioActive.checked = true;
        } else {
          radioInactive.checked = true;
        }
      });
    }
  }

  customElements.define("edit-func", Editfunction);
</script>
