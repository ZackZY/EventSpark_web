---
import { apiUrlHelper, fetchFromApi } from "../../../utils/api.config";
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";
import { string } from "astro:schema";

const title = "AdminLTE 4 | General Form Elements";
const path = "../../../dist";
const mainPage = "registerEvent";
const page = "registerForm";





const url = new URL("http://localhost:3000/registerEvent/registerForm/bfvf6pzlk2dliv8rqjb3evmqs31h8kbi9zs7&8bb936dd-d796-4efb-a26a-80df1f45fe5d");
//const url = "http://localhost:3000/registerEvent/registerForm/bfvf6pzlk2dliv8rqjb3evmqs31h8kbi9zs7&8bb936dd-d796-4efb-a26a-80df1f45fe5d"
const pathSegments = url.pathname.split('/');
const hash = pathSegments[pathSegments.length - 1];

//const hash ="bfvf6pzlk2dliv8rqjb3evmqs31h8kbi9zs7&8bb936dd-d796-4efb-a26a-80df1f45fe5d";
let [firstSet, secondSet] = hash.split('&');

// Split into first set
//let firstSet = hash.substring(0, 36);
//let secondSet = hash.substring(36, 72);

console.log("1st:", firstSet);
console.log("2nd:", secondSet);

// Fetch events and attendee data
let eventDetails;
let attendeeData;
let error = null;


try {
    // const [events, attendee] = await Promise.all([
    //     fetchFromApi(apiUrlHelper.EventsAPI, "GET"),
    //     fetchFromApi(`${apiUrlHelper.UsersAPI}/${hash}`, "GET")  // Fetch attendee data using hash
    // ]);
    eventDetails = await fetchFromApi(apiUrlHelper.EventsAPI + "/" + firstSet,  "GET");
    // console.log("events1: "+ JSON.stringify(events));
    //  eventDetails = JSON.stringify(events);
    //console.log(eventDetails);
    attendeeData = await fetchFromApi(apiUrlHelper.UsersAPI + "/" + secondSet, "GET");
    //console.log(attendeeData);
    // console.log(eventDetails);
    // console.log("attendees: "+ JSON.stringify(attendee));
    //attendeeData = attendee;  // This should contain the attendee's details
} catch (err) {
    err = "Error fetching data";
    console.error(err);
}



// try {
//     eventDetails = await fetchFromApi(apiUrlHelper.EventsAPI + "/" + firstSet, "GET");
//     try {
//         attendeeData = await fetchFromApi(apiUrlHelper.UsersAPI + "/" + secondSet, "GET");
//     } catch (attendeeErr) {
//         // If attendee not found, set attendeeData to null
//         attendeeData = null;
//     }
// } catch (err) {
//     error = "Error fetching event data";
//     console.error(err);
// }

const formatTime24 = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleTimeString('en-US', {
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
    });
};
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <Head title={title} path={path} />
    </head>
    <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
        <div class="app-wrapper">
            <Topbar path={path} />
            <Sidenav path={path} mainPage={mainPage} page={page} />
            <main class="app-main">
                <div class="app-content-header">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-sm-6">
                                <h3 class="mb-0">{attendeeData ? 'Registration Event Form' : 'Sign Up Form'}</h3>
                            </div>
                            <div class="col-sm-6">
                                <ol class="breadcrumb float-sm-end">
                                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                                    <li class="breadcrumb-item active">Event Registration</li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
                {attendeeData === null && (
                    <div class="alert alert-warning m-3" role="alert">
                        You haven't signed up yet. Please create an account to register for this event.
                    </div>
                )}

                <div class="app-content">
                    <div class="container-fluid">
                        <div class="row g-4">
                            <div class="col-md-10">
                                {/* Display Event Hash */}
                                <div class="alert alert-info mb-4">
                                    Event Registration Hash: {hash}
                                </div>

                                {/* Display Error Messages */}
                                {error && (
                                    <div class="alert alert-danger" role="alert">
                                        {error}
                                    </div>
                                )}

                                {/* Display Event Details */}
                                {
                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h5 class="card-title">Event Details 1</h5>
                                        </div>
                                        <div class="card-body">
                                            <h2>Event Id: {eventDetails.id}</h2>
                                            <h3>Event Name: {eventDetails.eventName}</h3>
                                            <p>Event Description: {eventDetails.eventDescription}</p>
                                            <p>Event Date: {eventDetails.eventDate}</p>
                                            <p>Event Location: {eventDetails.eventLocation}</p>
                                            <p>Event Start Time: {formatTime24(eventDetails.eventTimeStart)}</p>
                                            <p>Event End Time: {formatTime24(eventDetails.eventTimeEnd)}</p>
                                        </div>
                                    </div>
                                }

                                {/* Registration Form */}
                                <div class="card card-info card-outline mb-20">
                                    <div class="card-header">
                                        <div class="card-title">Registration Form</div>
                                    </div>
                                    <form class="needs-validation" novalidate id="submitform">
                                        <div class="card-body">
                                            <div class="row g-3">
                                            <!-- <input readonly id="attendeeId" value={attendeeData.id} />
                                            <h2>Attendee Id: {attendeeData.id}</h2> -->
                                              
                                        </div>

                                            <!-- {attendeeData && (
                                                <div class="card mb-4">
                                                    <div class="card-header">
                                                        <h5 class="card-title">Event Details 2</h5>
                                                    </div>
                                                    <div class="card-body">
                                                        <h3>attendee52 Name: {attendeeData.name}</h3>
                                                    </div>
                                                </div>
                                            )} -->

                                            <div class="row g-3">
                                                {/* Hidden Attendee ID field */}
                                                <input 
                                                    type="hidden" 
                                                    id="attendeeId1" 
                                                    value={attendeeData?.id || ''}
                                                />
                                                <div class="col-md-6">
                                                    <label class="form-label">AttendeeID</label>
                                                    <input 
                                                        type="text" 
                                                        class="form-control" 
                                                        id="attendeeId" 
                                                        value={attendeeData?.id || ''}
                                                        readonly
                                                   />
                                                <div class="col-md-6">
                                                    <label class="form-label">Name</label>
                                                    <input 
                                                        type="text" 
                                                        class="form-control" 
                                                        id="validationName" 
                                                        required 
                                                        value={attendeeData?.name || ''}
                                                    />
                                                    <!-- <div class="valid-feedback">Looks good!</div> -->
                                                </div>
                                                <div class="col-md-6">
                                                    <label class="form-label">Email Address</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text">@</span>
                                                        <input 
                                                            type="email" 
                                                            class="form-control" 
                                                            id="validationEmail" 
                                                            required 
                                                            value={attendeeData?.email || ''} 
                                                            readonly={attendeeData !== null}
                                                        />
                                                        <!-- <div class="invalid-feedback">Please enter valid email address.</div> -->
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <label class="form-label">Contact number</label>
                                                    <input 
                                                        type="tel" 
                                                        class="form-control" 
                                                        id="validationContact" 
                                                        required 
                                                        value={attendeeData?.contactNumber || ''}  
                                                        readonly={attendeeData !== null}
                                                    />
                                                    <!-- <div class="invalid-feedback">Please provide a valid contact number.</div> -->
                                                </div>

                                                {!attendeeData && (
                                                    <div class="col-md-6">
                                                        <label class="form-label">Password</label>
                                                        <input 
                                                            type="password" 
                                                            class="form-control" 
                                                            id="validationPassword" 
                                                            required 
                                                            minlength="6"
                                                        />
                                                        <div class="invalid-feedback">Password must be at least 6 characters.</div>
                                                    </div>
                                                )}
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button class="btn btn-info" type="submit"> 
                                                {attendeeData ? 'Register for Event' : 'Sign Up'}</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            <Footer />
        </div>
        <Scripts path={path} />

        <script is:inline>
            (() => {
                "use strict";

                const form = document.getElementById("submitform");
                console.log(form);
                console.log(attendeeId.value);
                form.addEventListener("submit", async (event) => {
                    event.preventDefault();

                    if (!form.checkValidity()) {
                        event.stopPropagation();
                        form.classList.add("was-validated");
                        return;
                    }
                    console.log("submitform1: ", document.getElementById("submitform"));

                    const formData = {
                        //id: document.getElementById("submitform"),
                        attendeeId:document.getElementById("attendeeId").value,
                        name: document.getElementById("validationName").value,
                        email: document.getElementById("validationEmail").value,
                        contactNumber: document.getElementById("validationContact").value,
                        //eventAttendeeHash: hash
                    };

                    const isRegistered = {
                        
                        attendeeId:document.getElementById("attendeeId").value,
                        dateTimeRegistered: currentTime.toLocaleString(),
                        status: Registered
                        
                        //eventAttendeeHash: hash
                    };

                    console.log("formData1: ", formData.id);

                    console.log("formDatatttttt: ", formData.attendeeId);
                    console.log("formData2:" + formData.name); 
                    console.log("formData3:" + formData.email); 
                    console.log("formData4:" + formData.contactNumber); 


                    try {
                      const response = await fetchFromApi(
                      apiUrlHelper.UsersAPI + "/" + attendeeId.value,
                      "PUT",
                      formData
                    );


                    try {
                      const response = await fetchFromApi(
                      apiUrlHelper.UsersAPI + "/" + attendeeId.value,
                      "PUT",
                      formData
                    );
                    console.log("formData:" + JSON.stringify(formData));    
                    console.log("response:" + JSON.stringify(response));   

                    if (response.id) {
                            alert('Registration successful!'+ response.id);
                            //window.location.reload();
                            setTimeout(function() {
                            window.location.href = "http://localhost:3000/index.html";
                             }, 2000); 
                        } else {
                            throw new Error('Registration failed');
                        }
                    } catch (error) {
                        console.error("Error submitting form:", error);
                        alert('Registration failed. Please try again.');
                    }
                });
            })();
        </script>
    </body>
</html>