---
import { apiUrlHelper, fetchFromApi } from "../../utils/api.config";
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";

const title = "EventSpark | Dashboard";
const path = "../../dist";
const mainPage = "dashboard";
const page = "index";
const organiserEvents = await fetchFromApi(apiUrlHelper.EventsAPI, "GET");
const attendeeEvents = await fetchFromApi(apiUrlHelper.EventsAPI + "/user/" + "0b0072e9-25da-42ab-868c-155fa464adcc", "GET");

// Filter organiser events by organiserId and get the count
const filteredOrganiserEvents = organiserEvents.filter(
  (data) => data.organiserId === "78f27d0f-5dcc-4c33-9908-739b6d0de607"
);
const organiserEventCount = filteredOrganiserEvents.length;

// Get today's date without time (for comparison purposes)
const today = new Date();
today.setHours(0, 0, 0, 0); // Set time to midnight

// Filter attendeeEvents to only include events with a date later than today
const upcomingAttendeeEventCount = attendeeEvents.filter((event) => {
  const eventDate = new Date(event.eventDate);
  return eventDate > today;
}).length;

// Fetch additional details for each event by ID and calculate progress
const fetchEventDetails = async (events) => {
  const eventDetails = await Promise.all(
    events.map(async (event) => {
      try {
        const eventUsers = await fetchFromApi(apiUrlHelper.EventAttendeesAPI + "/" + event.id, "GET");

        const attendees = Array.isArray(eventUsers)
          ? eventUsers.filter((data) => data.typeOfAttendee === 'attendee')
          : [];

        // Calculate progress based on "accepted" status
        const totalParticipants = attendees?.length || 0;
        const acceptedCount = attendees?.filter((p) => p.status === "accepted").length || 0;
        const progress = totalParticipants > 0 ? (acceptedCount / totalParticipants) * 100 : 0;

        return { ...event, progress };
      } catch (error) {
        console.error(`Error fetching details for event ID ${event.id}:`, error);
        return { ...event, progress: 0 };
      }
    })
  );
  return eventDetails;
};

// Function to determine the appropriate progress bar class
function getProgressBarClass(progress) {
  if (progress < 30) return "bg-danger";
  if (progress >= 30 && progress < 60) return "bg-warning";
  if (progress >= 60 && progress < 85) return "bg-primary";
  return "bg-success";
}
function getBadgeClass(progress) {
  if (progress < 30) return "text-bg-danger";
  if (progress >= 30 && progress < 60) return "text-bg-warning";
  if (progress >= 60 && progress < 85) return "text-bg-primary";
  return "text-bg-success";
}
// Get detailed data for each event
const organiserEventsWithDetails = await fetchEventDetails(filteredOrganiserEvents);
---

<!doctype html>
<html lang="en">
  <head>
    <Head title={title} path={path} />
  </head>
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <div class="app-wrapper">
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <main class="app-main">
        <div class="app-content-header">
          <div class="container-fluid">
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Dashboard</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                </ol>
              </div>
            </div>
          </div>
        </div>

        <div class="app-content">
          <div class="container-fluid">
            <div class="row">
              <div class="col-lg-3 col-6">
                <div class="small-box text-bg-primary">
                  <div class="inner">
                    <h3>{organiserEventCount}</h3>
                    <p>Event Owned</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      d="M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z"
                    ></path>
                  </svg>
                  <a href={"/event-organiser.html"} class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
              </div>
              <div class="col-lg-3 col-6">
                <div class="small-box text-bg-success">
                  <div class="inner">
                    <h3>{upcomingAttendeeEventCount}</h3>
                    <p>Pending Attend</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      d="M19 3h-1V1.5a.75.75 0 00-1.5 0V3H7V1.5a.75.75 0 00-1.5 0V3H5a3 3 0 00-3 3v13a3 3 0 003 3h14a3 3 0 003-3V6a3 3 0 00-3-3zm1.5 16a1.5 1.5 0 01-1.5 1.5H5A1.5 1.5 0 013.5 19V9h17v10zM4.5 8V6A1.5 1.5 0 016 4.5h1.5V6a.75.75 0 001.5 0V4.5h8V6a.75.75 0 001.5 0V4.5H18A1.5 1.5 0 0119.5 6v2h-15z"
                    ></path>
                  </svg>
                  <a href={"/event-attendee.html"} class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
              </div>
            </div>
            {organiserEventCount > 0 && (
            <div class="row">
              <div class="col-lg-6">
                <div class="card mb-4">
                  <div class="card-header">
                    <h3 class="card-title">Event List for organiser</h3>
                  </div>
                  <div class="card-body p-0">
                    <table class="table table-striped">
                      <thead>
                        <tr>
                          <th style="width: 10px">#</th>
                          <th>Event Name</th>
                          <th>Attendance Rate</th>
                          <th style="width: 40px">Label</th>
                        </tr>
                      </thead>
                      <tbody>
                        {organiserEventsWithDetails.map((event, index) => (
                          <tr class="align-middle">
                            <td>{index + 1}</td>
                            <td>{event.eventName}</td>
                            <td>
                              <div class="progress progress-xs">
                                <div
                                  class={`progress-bar ${getProgressBarClass(event.progress)}`}
                                  style={`width: ${event.progress}%`}
                                ></div>
                              </div>
                            </td>
                            <td>
                              <span class={`badge ${getBadgeClass(event.progress)}`}>
                                {Math.round(event.progress)}%
                              </span>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
            )}
          </div>
        </div>
      </main>
      <Footer />
    </div>
    <Scripts path={path} />
  </body>
</html>
